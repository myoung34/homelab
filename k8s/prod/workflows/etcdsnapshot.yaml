---
apiVersion: argoproj.io/v1alpha1
kind: CronWorkflow
metadata:
  name: etcd-backup
spec:
  schedule: "0 0 1 * *"
  startingDeadlineSeconds: 0
  suspend: false
  workflowSpec:
    volumes:
    - name: talos-secrets
      secret:
        secretName: talos-secrets
    entrypoint: main
    templates:
      - name: main
        inputs: {}
        script:
          image: alpine:latest
          command:
          - sh
          - -c
          - |
            apk add -U curl aws-cli

            dig @8.8.8.8 github.com
            dig @8.8.8.8 hooks.zapier.com

            _arch=$(uname -m | sed 's/aarch64/arm64/g' | sed 's/x86_64/amd64/g')
            _url="https://github.com/siderolabs/talos/releases/download/v1.9.4/talosctl-linux-${_arch}"

            echo "downloading from ${_url}"
            mkdir -p /usr/local/bin/
            curl -L ${_url} -o /usr/local/bin/talosctl
            chmod +x /usr/local/bin/talosctl

            aws configure set default.s3.signature_version s3v4
            talosctl -n 192.168.1.22 etcd snapshot $(date '+%Y%m%d%H%M%S').snapshot
            aws --endpoint-url http://minio.consul.marcyoung.us:9000 s3 cp *.snapshot s3://backups/talos-etcd/
            curl -XPOST -H 'Content-Type: application/json' ${ZAPIER_WEBHOOK_URL} -d '{"message": "etcd snapshot complete"}'
          env:
          - name: ZAPIER_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: ZAPIER_WEBHOOK_URL
                name: argowf
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: MINIO_ACCESS_KEY_ID
                name: argowf
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: MINIO_SECRET_ACCESS_KEY
                name: argowf
          volumeMounts:
          - mountPath: /var/run/secrets/talos.dev
            name: talos-secrets
---
apiVersion: talos.dev/v1alpha1
kind: ServiceAccount
metadata:
  name: talos-secrets
spec:
    roles:
        - os:admin
