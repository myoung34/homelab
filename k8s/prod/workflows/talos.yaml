apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: talos-backup-template
spec:
  serviceAccountName: argo
  templates:
    - name: main
      inputs:
        parameters:
        - name: slack_message
        - name: talos_directory
        - name: minio_path
      script:
        image: alpine:latest
        command:
        - sh
        - -c
        - |
          apk add -U bash curl aws-cli 	bind-tools
          dig @8.8.8.8 github.com
          dig @8.8.8.8 hooks.zapier.com

          _arch=$(uname -m | sed 's/aarch64/arm64/g' | sed 's/x86_64/amd64/g')
          _url="https://github.com/siderolabs/talos/releases/download/v1.9.4/talosctl-linux-${_arch}"

          echo "downloading from ${_url}"
          mkdir -p /usr/local/bin/
          curl -L ${_url} -o /usr/local/bin/talosctl
          chmod +x /usr/local/bin/talosctl

          aws configure set default.s3.signature_version s3v4
          mkdir /tmp/backup
          cat <<EOF >run.sh
          hosts=\$(talosctl -n \${NODES} get disks  | grep -v sda | grep -v loop | grep -v '\*\$' | grep -v NODE | awk '{print \$1}')
          for host in \${hosts}; do
            echo "got host \${host}"
            talosctl -n \${host} list {{inputs.parameters.talos_directory}} >/dev/null 2>&1
            if [[ \$? -eq 0 ]]; then

              talosctl -n \${host} ls -Hr {{inputs.parameters.talos_directory}} 2>/dev/null | \
                  grep -v '^NODE' | cut -d' ' -f2- | sed 's/^ *//' | grep -v '^\.' | \
                  while IFS= read -r i; do
                echo "copying \${i} from \${host}"
                talosctl -n \${host} read "{{inputs.parameters.talos_directory}}/\${i}" >/dev/null 2>&1
                if [[ \$? -eq 0 ]]; then
                  mkdir -p "/tmp/backup/\$(dirname "\${i}")" >/dev/null 2>&1
                  talosctl -n \${host} read "{{inputs.parameters.talos_directory}}/\${i}" >"/tmp/backup/\${i}"
                else
                  echo "${i} is a directory. skip it."
                fi
              done
              tar czf /tmp/\$(date '+%Y%m%d%H%M%S').tgz /tmp/backup
              aws --endpoint-url http://minio.consul.marcyoung.us:9000 s3 cp /tmp/*.tgz s3://backups/{{inputs.parameters.minio_path}}/
              curl -XPOST -H 'Content-Type: application/json' \${ZAPIER_WEBHOOK_URL} -d '{"message": "{{inputs.parameters.slack_message}}"}'
            else
              echo "directory {{inputs.parameters.talos_directory}} not on \${host}"
            fi
          done
          EOF
          cat run.sh
          bash run.sh
        env:
        - name: NODES
          value: "192.168.1.19,192.168.1.21,192.168.1.22,192.168.1.23,192.168.1.24,192.168.1.25,192.168.1.26,192.168.1.27"
        - name: ZAPIER_WEBHOOK_URL
          valueFrom:
            secretKeyRef:
              key: ZAPIER_WEBHOOK_URL
              name: argowf
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: MINIO_ACCESS_KEY_ID
              name: argowf
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: MINIO_SECRET_ACCESS_KEY
              name: argowf
        volumeMounts:
        - mountPath: /var/run/secrets/talos.dev
          name: talos-secrets
