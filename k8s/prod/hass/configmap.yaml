apiVersion: v1
kind: ConfigMap
metadata:
  name: hass
data:
  remove_backup.sh: |
    #!/bin/bash
    sleep 30
    rm $1

    SLACK_WEBHOOK_URL=$(cat /config/secrets.yaml | grep slack_webhook_url | awk '{print $2}' | sed "s/'//g")
    curl -XPOST "${SLACK_WEBHOOK_URL}" -d "{\"message\": \"Hass backup to minio complete.\"}"

  scenes.yaml: |
    #todo
  customize.yaml: |
    #todo
  groups.yaml: |
    #todo
  automations.yaml: |
    - alias: All inside lights on
      id: all_inside_lights_on
      description: "Turn All Inside Lights On"
      mode: single
      trigger: []
      condition: []
      action:
        - service: mqtt.publish
          data:
            qos: 0
            retain: false
            topic: zigbee2mqtt/downstairs/set
            payload: "{\"state\": \"ON\"}"
        - service: mqtt.publish
          data:
            qos: 0
            retain: false
            topic: zigbee2mqtt/upstairs/set
            payload: "{\"state\": \"ON\"}"
    - alias: All inside lights off
      id: all_inside_lights_off
      description: "Turn All Inside Lights Off"
      mode: single
      trigger: []
      condition: []
      action:
        - service: mqtt.publish
          data:
            qos: 0
            retain: false
            topic: zigbee2mqtt/downstairs/set
            payload: "{\"state\": \"OFF\"}"
        - service: mqtt.publish
          data:
            qos: 0
            retain: false
            topic: zigbee2mqtt/upstairs/set
            payload: "{\"state\": \"OFF\"}"
    - alias: Outside lights on
      id: outside_lights_on
      description: "Turn on outside lights"
      mode: single
      trigger: []
      condition: []
      action:
        - type: turn_on
          device_id: ac2a71a69775690f92866121735a0739
          entity_id: light.pergola_lights
          domain: light
        - type: turn_on
          device_id: 022c8a09ea2d67c7886de4fe883cef62
          entity_id: switch.front_porch_relay
          domain: switch
    - alias: Outside lights off
      id: outside_lights_off
      description: "Turn off outside lights"
      mode: single
      trigger: []
      condition: []
      action:
        - type: turn_off
          device_id: ac2a71a69775690f92866121735a0739
          entity_id: light.pergola_lights
          domain: light
        - type: turn_off
          device_id: 022c8a09ea2d67c7886de4fe883cef62
          entity_id: switch.front_porch_relay
          domain: switch
    - alias: Liam - turn things on
      id: liams_room_on
      description: "Turn things on in liams room"
      mode: single
      trigger: []
      condition: []
      action:
        - type: turn_on
          device_id: ebe254c5092831e687e3cb0f21cf2c91
          entity_id: light.liam_starlight
          domain: light
        - type: turn_on
          device_id: d3ddbb16235c592ebcaab802e074b854
          entity_id: switch.liam_plug_pow_relay
          domain: switch
    - alias: Liam - turn things off
      id: liams_room_off
      description: "Turn things off in liams room"
      mode: single
      trigger: []
      condition: []
      action:
        - type: turn_off
          device_id: ebe254c5092831e687e3cb0f21cf2c91
          entity_id: light.liam_starlight
          domain: light
        - type: turn_off
          device_id: d3ddbb16235c592ebcaab802e074b854
          entity_id: switch.liam_plug_pow_relay
          domain: switch
    - alias: Nighttime - Turn on things
      id: nighttime_on
      description: "Turn things on at night"
      mode: single
      trigger:
        - platform: time
          at: "18:30:00"
      condition: []
      action:
        - type: turn_on
          device_id: ac2a71a69775690f92866121735a0739
          entity_id: light.pergola_lights
          domain: light
        - type: turn_on
          device_id: 022c8a09ea2d67c7886de4fe883cef62
          entity_id: switch.front_porch_relay
          domain: switch
        - type: turn_on
          device_id: ebe254c5092831e687e3cb0f21cf2c91
          entity_id: light.liam_starlight
          domain: light
        - type: turn_on
          device_id: d3ddbb16235c592ebcaab802e074b854
          entity_id: switch.liam_plug_pow_relay
          domain: switch
    - alias: Nighttime - Turn off things
      id: nighttime_off
      description: Turn things off at night
      trigger:
        - platform: time
          at: "01:00:00"
      condition: []
      action:
        - type: turn_off
          device_id: ebe254c5092831e687e3cb0f21cf2c91
          entity_id: light.liam_starlight
          domain: light
        - type: turn_off
          device_id: d3ddbb16235c592ebcaab802e074b854
          entity_id: switch.liam_plug_pow_relay
          domain: switch
        - type: turn_off
          device_id: ac2a71a69775690f92866121735a0739
          entity_id: light.pergola_lights
          domain: light
        - type: turn_off
          device_id: 022c8a09ea2d67c7886de4fe883cef62
          entity_id: switch.front_porch_relay
          domain: switch
      mode: single
    - alias: Utility - backup
      id: utility_backup
      trigger:
      - platform: time
        at: 03:00:00
      condition:
        - condition: template
          value_template: "{{ now().day == 1 }}"
      action:
      - service: backup.create
        data:
          homeassistant: true
      mode: queued
    - alias: Upload and remove backup
      id: upload_and_remove_backup
      description: 'Remove local back up and upload to s3'
      trigger:
      - platform: event
        event_type: folder_watcher
        event_data:
          event_type: closed
      action:
      - service: minio.put
        data:
          bucket: backups
          file_path: '{{ trigger.event.data.path }}'
          key: hass/{{ now().strftime('%Y%m%dT%H%M%S.tar') }}
      - service: shell_command.remove_backup
        data_template:
          path: '{{ trigger.event.data.path }}'
      mode: queued
  scripts.yaml: |
    front_door:
      alias: Front Door
      sequence:
      - if:
        - condition: state
          entity_id: lock.front_door
          state: unlocked
        then:
        - service: lock.lock
          data: {}
          target:
            entity_id: lock.front_door
        else:
        - service: lock.unlock
          data: {}
          target:
            entity_id: lock.front_door
      mode: single
    garage_door:
      alias: Garage Door
      sequence:
      - type: toggle
        device_id: 5cc3f414b31653c3b2a25597f11ffe0e
        entity_id: switch.garage
        domain: switch
      - delay:
          hours: 0
          minutes: 0
          seconds: 1
          milliseconds: 0
      - type: toggle
        device_id: 5cc3f414b31653c3b2a25597f11ffe0e
        entity_id: switch.garage
        domain: switch
      mode: single

  configuration.yaml: |
    homeassistant:
      name: Home
      latitude: 36.066
      longitude: -86.9659
      elevation: 0
      unit_system: imperial
      time_zone: America/Chicago
      customize: !include customize.yaml
      allowlist_external_dirs:
        - /config
    minio:
      host: 192.168.3.2
      port: 9000
      secure: false
      access_key: !secret minio_access_key
      secret_key: !secret minio_secret_key

    logger:
      default: error

    default_config:

    http:
      base_url: http://hass.marcyoung.us
      ip_ban_enabled: false
      use_x_forwarded_for: true
      trusted_proxies:
        - 10.244.0.0/16
        - 192.168.1.0/24

    group: !include groups.yaml
    automation: !include automations.yaml
    script: !include scripts.yaml
    scene: !include scenes.yaml


    datadog:
      host: 192.168.3.2
      port: 8126


    google_assistant:
      project_id: something-99631
      service_account: !include SERVICE_ACCOUNT.json
      report_state: true
      exposed_domains:
        - switch
        - light
      entity_config: {}

    template:
      - sensor:
          - name: "Dog Food Status"
            unique_id: "dog_food_status_sensor"
            state: >
              {% set last_changed = states.sensor.dog_food_action.last_changed %}
              {% set morning_target = now().replace(hour=6, minute=0, second=0, microsecond=0) %}
              {% set evening_target = now().replace(hour=17, minute=0, second=0, microsecond=0) %}

              {% if morning_target - timedelta(hours=3) <= last_changed <= morning_target + timedelta(hours=3) or
                    evening_target - timedelta(hours=3) <= last_changed <= evening_target + timedelta(hours=3) %}
                OK
              {% else %}
                NOT OK
              {% endif %}

    light:
      - platform: switch
        name: "Kitchen Lights"
        entity_id: switch.toggle_kitchen_lights
      - platform: switch
        name: "Dining Room Lights"
        entity_id: switch.toggle_dining_room_lights
      - platform: switch
        name: "Living Room Lights"
        entity_id: switch.toggle_living_room_lights
      - platform: switch
        name: "Closet Lights"
        entity_id: switch.toggle_closet_lights
      - platform: group
        name: "Downstairs Hall Lights"
        entities:
          - light.downstairs_hall_1
      - platform: group
        name: "Front Door Lights"
        entities:
          - light.front_door_1
      - platform: switch
        name: "Half Bath Lights"
        entity_id: switch.toggle_half_bath_lights
      - platform: switch
        name: "Laundry Room Lights"
        entity_id: switch.toggle_laundry_room_lights
      - platform: switch
        name: "Liam Bathroom Lights"
        entity_id: switch.toggle_liam_bath_lights
      - platform: switch
        name: "Master Bedroom Lights"
        entity_id: switch.toggle_master_bedroom_lights
      - platform: switch
        name: "Master Bathroom Lights"
        entity_id: switch.toggle_master_bath_lights
      - platform: switch
        name: "Office Lights"
        entity_id: switch.toggle_office_lights
      - platform: switch
        name: "Playroom Lights"
        entity_id: switch.toggle_playroom_lights
      - platform: switch
        name: "Upstairs Hall Lights"
        entity_id: switch.toggle_upstairs_hall_lights
    #for i in $(talosctl read -n ${node} /var/mnt/storage/zigbee2mqtt/configuration.yaml | yq '.groups[].friendly_name' | xargs echo); do
    #FRIENDLY=$(echo $i | sed 's/_/ /g')
    #cat <<EOF >>out.yaml
    #        toggle_${i}_lights:
    #          friendly_name: "Toggle ${FRIENDLY} Lights"
    #          unique_id: ${i}_lights
    #          turn_on:
    #            service: mqtt.publish
    #            data:
    #              topic: "zigbee2mqtt/${i}/set"
    #              payload: "{\"state\": \"ON\"}"
    #          turn_off:
    #            service: mqtt.publish
    #            data:
    #              topic: "zigbee2mqtt/${i}/set"
    #              payload: "{\"state\": \"OFF\"}"
    #EOF
    #done
    switch:
      platform: template
      switches:
        toggle_kitchen_lights:
          friendly_name: "Toggle kitchen Lights"
          unique_id: kitchen_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/kitchen/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/kitchen/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_all_lights:
          friendly_name: "Toggle all inside lights"
          unique_id: all_inside_lights
          turn_on:
            - service: mqtt.publish
              data:
                topic: "zigbee2mqtt/all/set"
                payload: "{\"state\": \"ON\"}"
            - service: mqtt.publish
              data:
                topic: "zigbee2mqtt-upstairs/all/set"
                payload: "{\"state\": \"ON\"}"
          turn_off:
            - service: mqtt.publish
              data:
                topic: "zigbee2mqtt/all/set"
                payload: "{\"state\": \"OFF\"}"
            - service: mqtt.publish
              data:
                topic: "zigbee2mqtt-upstairs/all/set"
                payload: "{\"state\": \"OFF\"}"
        toggle_downstairs_lights:
          friendly_name: "Toggle downstairs Lights"
          unique_id: downstairs_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/downstairs/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/downstairs/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_dining_room_lights:
          friendly_name: "Toggle dining room Lights"
          unique_id: dining_room_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/dining_room/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/dining_room/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_living_room_lights:
          friendly_name: "Toggle living room Lights"
          unique_id: living_room_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/living_room/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/living_room/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_laundry_room_lights:
          friendly_name: "Toggle laundry room Lights"
          unique_id: laundry_room_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/laundry_room/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/laundry_room/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_library_lights:
          friendly_name: "Toggle library Lights"
          unique_id: library_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/library/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/library/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_half_bath_lights:
          friendly_name: "Toggle half bath Lights"
          unique_id: half_bath_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/half_bath/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt/half_bath/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_upstairs_hall_lights:
          friendly_name: "Toggle upstairs hall Lights"
          unique_id: upstairs_hall_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/upstairs_hall/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/upstairs_hall/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_liam_bath_lights:
          friendly_name: "Toggle liam bath Lights"
          unique_id: liam_bath_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/liam_bathroom/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/liam_bathroom/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_master_bath_lights:
          friendly_name: "Toggle master bath Lights"
          unique_id: master_bath_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/master_bath/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/master_bath/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_master_bedroom_lights:
          friendly_name: "Toggle master bedroom Lights"
          unique_id: master_bedroom_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/master_bedroom/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/master_bedroom/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_closet_lights:
          friendly_name: "Toggle closet Lights"
          unique_id: closet_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/closet/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/closet/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_upstairs_lights:
          friendly_name: "Toggle upstairs Lights"
          unique_id: upstairs_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/all/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/all/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_office_lights:
          friendly_name: "Toggle office Lights"
          unique_id: office_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/office/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/office/set"
              payload: "{\"state\": \"OFF\"}"
        toggle_playroom_lights:
          friendly_name: "Toggle playroom Lights"
          unique_id: playroom_lights
          turn_on:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/playroom/set"
              payload: "{\"state\": \"ON\"}"
          turn_off:
            service: mqtt.publish
            data:
              topic: "zigbee2mqtt-upstairs/playroom/set"
              payload: "{\"state\": \"OFF\"}"
        front_door:
          unique_id: front_door
          turn_on:
            service: lock.lock
            data: {}
            target:
              entity_id: lock.front_door
          turn_off:
            service: lock.unlock
            data: {}
            target:
              entity_id: lock.front_door
        toggle_front_door:
          unique_id: toggle_front_door
          turn_on:
            service: script.front_door
          turn_off:
            service: script.front_door
        activate_garage:
          unique_id: garage
          turn_on:
            service: script.garage_door
          turn_off:
            service: script.garage_door
        automation_outside_lights:
          unique_id: outside_lights
          turn_on:
            service: automation.trigger
            entity_id: automation.outside_lights_on
          turn_off:
            service: automation.trigger
            entity_id: automation.outside_lights_off
        automation_liams_room:
          unique_id: liams_room
          turn_on:
            service: automation.trigger
            entity_id: automation.liam_turn_things_on
          turn_off:
            service: automation.trigger
            entity_id: automation.liam_turn_things_off

    recorder:
      purge_keep_days: 30
      db_url: !secret psql_connector_string
      db_retry_wait: 10 # Wait 10 seconds before retrying
      exclude:
        domains:
          - automation
          - updater
        entity_globs:
          - sensor.weather_*
        entities:
          - sun.sun # Don't record sun data
          - sensor.last_boot # Comes from 'systemmonitor' sensor platform
          - sensor.date
        event_types:
          - call_service # Don't record service calls

    shell_command:
      remove_backup: /config/scripts/remove_backup.sh "{{ path }}"
