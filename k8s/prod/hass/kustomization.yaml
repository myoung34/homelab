apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: hass

resources:
  - namespace.yaml
  - configmap.yaml
  - traefik.yaml
  - le.yaml
  - pv.yaml
  - pvc.yaml
  - vault.yaml

helmCharts:
- name: home-assistant
  includeCRDs: true
  namespace: hass
  releaseName: hass
  version: 13.4.2
  repo: https://k8s-at-home.com/charts
  valuesInline:
    hostNetwork: true
    metrics:
      enabled: false
      prometheusRule:
        enabled: false
    securityContext:
      privileged: true
      capabilities:
        add:
          - NET_ADMIN
          - NET_RAW
          - SYS_ADMIN
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: feature.node.kubernetes.io/usb-08_0781_5597.present
              operator: Exists
    initContainers:
      copy:
        image: alpine:latest
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c", " mkdir /config/scripts; cp /configs/*.sh /config/scripts; chmod +x /config/scripts/*.sh; cp /configs/*.yaml /config/; echo $SECRETS_YAML | base64 -d >/config/secrets.yaml; echo $SERVICE_ACCOUNT >/config/SERVICE_ACCOUNT.json;"]
        env:
          - name: SECRETS_YAML
            valueFrom:
              secretKeyRef:
                name: hass
                key: secrets
          - name: SERVICE_ACCOUNT
            valueFrom:
              secretKeyRef:
                name: hass
                key: service_account
        volumeMounts:
        - name: config
          mountPath: /config
        - name: configmap
          mountPath: /configs/
    volumeClaimTemplates: []
    persistence:
      config:
        enabled: true
        type: pvc
        mountPath:  /config
        readOnly: false
        storageClass: local-path
        existingClaim: hass
        accessMode: ReadWriteOnce
        size: 1Gi
        retain: false
      configmap:
        type: custom
        enabled: true
        volumeSpec:
          configMap:
            name: hass
      dbus:
        enabled: true
        type: hostPath
        hostPath: /var/run/dbus
        mountPath: /run/dbus
        readOnly: true

patches:
  - target:
      kind: Deployment
      name: hass-home-assistant
    patch: |-
      - op: replace
        path: /spec/template/spec/containers/0/image
        value: ghcr.io/home-assistant/home-assistant:2023.10.5
      - op: add
        path: /metadata/annotations
        value:
          configmap.reloader.stakater.com/reload: "hass"
