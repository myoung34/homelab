apiVersion: v1
kind: ConfigMap
metadata:
  name: esphome
data:
  ultrasonic_sensor.h: |
    #include "esphome.h"

    class UltrasonicSensor : public PollingComponent, public Sensor {
     public:
      UltrasonicSensor(uint32_t update_interval) : PollingComponent(update_interval) {}
      const int pingPin = 2;
      Sensor *ultrasonic_sensor = new Sensor();

      void setup() override {
      }

      void update() override {
        long duration, cm;

        pinMode(pingPin, OUTPUT);
        digitalWrite(pingPin, LOW);
        delayMicroseconds(3);
        digitalWrite(pingPin, HIGH);
        delayMicroseconds(6);
        digitalWrite(pingPin, LOW);

        pinMode(pingPin, INPUT);
        duration = pulseIn(pingPin, HIGH);
        cm = duration / 29 / 2;

        if(cm > 2) {
          ultrasonic_sensor->publish_state(cm);
        }
      }
    };

  traeger.yaml: |
    esphome:
      name: traeger_pellet
      platform: ESP8266
      board: huzzah
      includes:
        - ultrasonic_sensor.h

    wifi:
     ssid: !secret wifi_ssid
     password: !secret wifi_password
     domain: !secret wifi_domain

    logger:

    api:
     encryption:
        key: !secret traeger_pellet_key

    ota:
      password: !secret ota_password

    http_request:
      useragent: esphome/device
      timeout: 60s

    sensor:
      - platform: custom
        lambda: |-
          auto sensor = new UltrasonicSensor(1000);
          App.register_component(sensor);
          return {sensor->ultrasonic_sensor};
        sensors:
          - name: ultrasonic_sensor
            filters:
              - sliding_window_moving_average:
                  window_size: 60
                  send_every: 60
            on_value:
              - http_request.post:
                  url: !secret traeger_pellet_hook_url
                  headers:
                    Content-Type: application/json
                  json: |-
                    root["distance"] = x;
                  verify_ssl: false # ESPHome ssl doesnt support strict checks

  liamplug.yaml: |
    esphome:
      name: liamplug
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:
      baud_rate: 0

    uart:
      rx_pin: RX
      baud_rate: 4800

    api:
      encryption:
        key: !secret liamplug_key

    ota:
      password: !secret ota_password


    binary_sensor:
      - platform: gpio
        pin:
          number: GPIO0
          mode: INPUT_PULLUP
          inverted: True
        name: "liam_plug_button"
        on_press:
          - switch.toggle: fakebutton
      - platform: template
        name: "liam_plug_running"
        filters:
          - delayed_off: 15s
        lambda: |-
          if (isnan(id(power).state)) {
            return {};
          } else if (id(power).state > 4) {
            // Running
            return true;
          } else {
            // Not running
            return false;
          }

    switch:
      - platform: template
        name: "liam_plug_pow_relay"
        optimistic: true
        id: fakebutton
        turn_on_action:
        - switch.turn_on: relay
        - light.turn_on: led
        turn_off_action:
        - switch.turn_off: relay
        - light.turn_off: led
      - platform: gpio
        id: relay
        pin: GPIO12
        restore_mode: ALWAYS_ON

    output:
      - platform: esp8266_pwm
        id: pow_blue_led
        pin:
          number: GPIO13
          inverted: True

    light:
      - platform: monochromatic
        name: "liam_plug_blue_led"
        output: pow_blue_led
        id: led
        restore_mode: ALWAYS_ON

    sensor:
      - platform: wifi_signal
        name: "liam_plug_wifi_signal"
        update_interval: 60s
      - platform: cse7766
        update_interval: 2s
        current:
          name: "liam_plug_current"
        voltage:
          name: "liam_plug_voltage"
        power:
          name: "liam_plug_pow_power"
          id: power
          on_value_range:
            - above: 4.0
              then:
                - light.turn_on: led
            - below: 3.0
              then:
                - light.turn_off: led

  plaato_airlock.yaml: |
    esphome:
      name: plaato_airlock

    esp8266:
      board: nodemcuv2

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    logger:


    web_server:
      port: 80

    api:
      encryption:
        key: !secret plaato_airlock_key

    ota:
      password: !secret ota_password


    status_led:
        pin: GPIO2

    light:
      - platform: monochromatic
        output: led1
        name: "LED1"

    output:
      - platform: esp8266_pwm
        pin: GPIO14
        frequency: 3000 Hz
        id: led1
      - platform: gpio
        pin: GPIO0
        id: GPIO0
      - platform: gpio
        pin: GPIO12
        id: GPIO12
      - platform: gpio
        pin: GPIO16
        id: GPIO16
        inverted: True

    switch:
      - platform: output
        name: "GPIO0"
        output: GPIO0
      - platform: output
        name: "GPIO12"
        output: GPIO12
      - platform: output
        name: "GPIO16"
        output: GPIO16

    binary_sensor:
      - platform: gpio
        pin:
          number: 4
          inverted: False
        name: "4"
      - platform: gpio
        pin:
          number: 5
          inverted: False
        name: "5"
      - platform: gpio
        pin:
          number: 13
          inverted: False
        name: "13"
      - platform: gpio
        pin:
          number: 15
          inverted: False
        name: "15"
  plug1.yaml: |
    esphome:
      name: plug1
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:
      baud_rate: 0

    uart:
      rx_pin: RX
      baud_rate: 4800

    api:
      encryption:
        key: !secret plug1_key

    ota:
      password: !secret ota_password


    binary_sensor:
      - platform: gpio
        pin:
          number: GPIO0
          mode: INPUT_PULLUP
          inverted: True
        name: "plug1_button"
        on_press:
          - switch.toggle: fakebutton
      - platform: template
        name: "plug1_running"
        filters:
          - delayed_off: 15s
        lambda: |-
          if (isnan(id(power).state)) {
            return {};
          } else if (id(power).state > 4) {
            // Running
            return true;
          } else {
            // Not running
            return false;
          }

    switch:
      - platform: template
        name: "plug1_pow_relay"
        optimistic: true
        id: fakebutton
        turn_on_action:
        - switch.turn_on: relay
        - light.turn_on: led
        turn_off_action:
        - switch.turn_off: relay
        - light.turn_off: led
      - platform: gpio
        id: relay
        pin: GPIO12
        restore_mode: ALWAYS_ON

    output:
      - platform: esp8266_pwm
        id: pow_blue_led
        pin:
          number: GPIO13
          inverted: True

    light:
      - platform: monochromatic
        name: "plug1_blue_led"
        output: pow_blue_led
        id: led
        restore_mode: ALWAYS_ON

    sensor:
      - platform: wifi_signal
        name: "plug1_wifi_signal"
        update_interval: 60s
      - platform: cse7766
        update_interval: 2s
        current:
          name: "plug1_current"
        voltage:
          name: "plug1_voltage"
        power:
          name: "plug1_pow_power"
          id: power
          on_value_range:
            - above: 4.0
              then:
                - light.turn_on: led
            - below: 3.0
              then:
                - light.turn_off: led
  plug2.yaml: |
    esphome:
      name: plug2
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:
      baud_rate: 0

    uart:
      rx_pin: RX
      baud_rate: 4800

    api:
      encryption:
        key: !secret plug2_key

    ota:
      password: !secret ota_password


    binary_sensor:
      - platform: gpio
        pin:
          number: GPIO0
          mode: INPUT_PULLUP
          inverted: True
        name: "Button"
        on_press:
          - switch.toggle: fakebutton
      - platform: template
        name: "Running"
        filters:
          - delayed_off: 15s
        lambda: |-
          if (isnan(id(power).state)) {
            return {};
          } else if (id(power).state > 4) {
            // Running
            return true;
          } else {
            // Not running
            return false;
          }

    switch:
      - platform: template
        name: "POW Relay"
        optimistic: true
        id: fakebutton
        turn_on_action:
        - switch.turn_on: relay
        - light.turn_on: led
        turn_off_action:
        - switch.turn_off: relay
        - light.turn_off: led
      - platform: gpio
        id: relay
        pin: GPIO12
        restore_mode: ALWAYS_ON

    output:
      - platform: esp8266_pwm
        id: pow_blue_led
        pin:
          number: GPIO13
          inverted: True

    light:
      - platform: monochromatic
        name: "Blue LED"
        output: pow_blue_led
        id: led
        restore_mode: ALWAYS_ON

    sensor:
      - platform: wifi_signal
        name: "WiFi Signal"
        update_interval: 60s
      - platform: uptime
        name: "Uptime"
      - platform: cse7766
        update_interval: 2s
        current:
          name: "Current"
        voltage:
          name: "Voltage"
        power:
          name: "POW Power"
          id: power
          on_value_range:
            - above: 4.0
              then:
                - light.turn_on: led
            - below: 3.0
              then:
                - light.turn_off: led

    text_sensor:
      - platform: version
        name: "ESPHome Version"

  plug3.yaml: |
    esphome:
      name: plug3
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:
      baud_rate: 0

    uart:
      rx_pin: RX
      baud_rate: 4800

    api:
      encryption:
        key: !secret plug3_key

    ota:
      password: !secret ota_password


    binary_sensor:
      - platform: gpio
        pin:
          number: GPIO0
          mode: INPUT_PULLUP
          inverted: True
        name: "plug3_button"
        on_press:
          - switch.toggle: fakebutton
      - platform: template
        name: "plug3_running"
        filters:
          - delayed_off: 15s
        lambda: |-
          if (isnan(id(power).state)) {
            return {};
          } else if (id(power).state > 4) {
            // Running
            return true;
          } else {
            // Not running
            return false;
          }

    switch:
      - platform: template
        name: "plug3_pow_relay"
        optimistic: true
        id: fakebutton
        turn_on_action:
        - switch.turn_on: relay
        - light.turn_on: led
        turn_off_action:
        - switch.turn_off: relay
        - light.turn_off: led
      - platform: gpio
        id: relay
        pin: GPIO12
        restore_mode: ALWAYS_ON

    output:
      - platform: esp8266_pwm
        id: pow_blue_led
        pin:
          number: GPIO13
          inverted: True

    light:
      - platform: monochromatic
        name: "plug3_blue_led"
        output: pow_blue_led
        id: led
        restore_mode: ALWAYS_ON

    sensor:
      - platform: wifi_signal
        name: "plug3_wifi_signal"
        update_interval: 60s
      - platform: cse7766
        update_interval: 2s
        current:
          name: "plug3_current"
        voltage:
          name: "plug3_voltage"
        power:
          name: "plug3_pow_power"
          id: power
          on_value_range:
            - above: 4.0
              then:
                - light.turn_on: led
            - below: 3.0
              then:
                - light.turn_off: led



  pergola.yaml: |
    esphome:
      name: pergola_lights
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:

    # Enable Home Assistant API
    api:
      encryption:
        key: !secret pergola_lights_key

    ota:
      password: !secret ota_password


    light:
      - platform: rgbww
        name: "pergola lights"
        red: output_component1
        green: output_component2
        blue: output_component3
        cold_white: output_component4
        cold_white_color_temperature: 6536 K
        warm_white: output_component5
        warm_white_color_temperature: 2000 K

    output:
      - platform: esp8266_pwm
        id: output_component1
        pin: 5

      - platform: esp8266_pwm
        id: output_component2
        pin: 12

      - platform: esp8266_pwm
        id: output_component3
        pin: 13

      - platform: esp8266_pwm
        id: output_component4
        pin: 15

      - platform: esp8266_pwm
        id: output_component5
        pin: 16

  liam_room_starlights.yaml: |
    esphome:
      name: liam_room_starlights
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    # Enable logging
    logger:

    # Enable Home Assistant API
    api:
      encryption:
        key: !secret liam_room_starlights_key

    ota:
      password: !secret ota_password


    light:
      - platform: rgbww
        name: "Liam Starlight"
        red: output_component1
        green: output_component2
        blue: output_component3
        cold_white: output_component4
        cold_white_color_temperature: 6536 K
        warm_white: output_component5
        warm_white_color_temperature: 2000 K
    #    restore_mode: ALWAYS_ON

    output:
      - platform: esp8266_pwm
        id: output_component1
        pin: 5

      - platform: esp8266_pwm
        id: output_component2
        pin: 12

      - platform: esp8266_pwm
        id: output_component3
        pin: 13

      - platform: esp8266_pwm
        id: output_component4
        pin: 15

      - platform: esp8266_pwm
        id: output_component5
        pin: 16

  garage.yaml: |
     esphome:
       name: garage_switch
       platform: ESP8266
       board: esp01_1m

     wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

     # Enable logging
     logger:

     # Enable Home Assistant API
     api:
      encryption:
        key: !secret garage_switch_key

     ota:
       password: !secret ota_password

     switch:
       - platform: gpio
         name: "garage"
         pin: 5

  front_porch_switch.yaml: |
    esphome:
      name: front_porch_switch
      platform: ESP8266
      board: esp01_1m

    wifi:
      ssid: !secret wifi_ssid
      password: !secret wifi_password
      domain: !secret wifi_domain

    logger:
      level: VERBOSE
      baud_rate: 0

    api:
      encryption:
        key: !secret front_porch_switch_key

    ota:
      password: !secret ota_password

    sensor:
      - platform: wifi_signal
        name: front_porch_switch_signal
        update_interval: 15s

    switch:
      - platform: gpio
        id: "relay"
        name: "front_porch_relay"
        pin: 12
        on_turn_on:
          then:
            - switch.turn_on: relay
            - output.turn_on: status_led
        on_turn_off:
          then:
            - switch.turn_off: relay
            - output.turn_off: status_led

    output:
      - platform: esp8266_pwm
        id: status_led
        pin:
          number: GPIO4
          inverted: True

    binary_sensor:
      - platform: gpio
        name: "front_porch_switch"
        pin:
          number: 13
          inverted: True
        on_press:
          - switch.toggle: relay
