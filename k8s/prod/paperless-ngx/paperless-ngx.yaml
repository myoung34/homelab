apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/name: paperless-ngx
  name: paperless-ngx
spec:
  ports:
  - name: http
    port: 8000
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/name: paperless-ngx
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    secret.reloader.stakater.com/reload: paperless-ngx
  labels:
    app.kubernetes.io/instance: paperless-ngx
    app.kubernetes.io/name: paperless-ngx
  name: paperless-ngx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: paperless-ngx
      app.kubernetes.io/name: paperless-ngx
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: paperless-ngx
        app.kubernetes.io/name: paperless-ngx
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - arm64
      automountServiceAccountToken: true
      containers:
      - env:
        - name: USERMAP_UID
          value: "1000"
        - name: USERMAP_GID
          value: "1000"
        - name: TZ
          value: "America/Chicago"
        - name: PAPERLESS_URL
          value: "https://docs.king-gila.ts.net"
        - name: PAPERLESS_FILENAME_FORMAT
          value: "tags/{{ tag_list }}/{{ title }}"
        - name: PAPERLESS_REDIS
          value: "redis://redis.paperless-ngx.svc.cluster.local:6379"
        - name: PAPERLESS_DBENGINE
          value: "postgres"
        - name: PAPERLESS_DBHOST
          value: "192.168.3.2"
        - name: PAPERLESS_DBPORT
          value: "5432"
        - name: PAPERLESS_DBNAME
          value: "paperless"
        - name: PAPERLESS_MEDIA_ROOT
          value: "/opt/paperless/media"
        - name: PAPERLESS_DATA_DIR
          value: "/opt/paperless/data"
        envFrom:
        - secretRef:
            name: paperless-ngx
        image: "ghcr.io/paperless-ngx/paperless-ngx:2.16.3"
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          tcpSocket:
            port: 8000
          timeoutSeconds: 1
        name: paperless-ngx
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          tcpSocket:
            port: 8000
          timeoutSeconds: 1
        startupProbe:
          failureThreshold: 30
          initialDelaySeconds: 120
          periodSeconds: 5
          tcpSocket:
            port: 8000
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /opt/paperless
          name: data
      serviceAccountName: default
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: paperless
